--------------------------------------------------------------------------
--este operacion devuelve dado un jugador una tupla con su nombre y su ganancia
dameNombreGanancia(j:Jugador):TupleType(nombre:String , ganancia: Numero))
pre:	true
post:	result = Tuple{nombre:String = j.nombre, ganancia:Numero = (j.saldo - j.saldoInicial)}

-------------------------------------------------------------------------
--genera el reporte de ganancia por jugador
--
--busco el jugador que mas gano
--y selecciono todos los jugadores que hayan ganado tanto como el que mas gano
--luego los transforno en tuplas
--
reporteRanking(ascendente:Boolean):Collection(TupleType(nombre:String , ganancia: Numero))
pre:	true
post:	
	let jugadores:Collection(Jugador) = Jugador.allInstances()
	let masGanadores = jugadores->orderedBy(j | j.saldo - j.saldoInicial)
	let menosGanadores = jugadores->orderedBy(j | j.saldoInicial - j.saldo)

if ascendente
then
	result = masGanadores->iterate(j;res=orderedSet();res->including(dameNombreGanancia(j))
else
	result = menosGanadores->iterate(j;res=orderedSet();res->including(dameNombreGanancia(j))
endif

--////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////

-------------------------------------------------------------------------- 
--este operacion devuelve dado un jugador una tupla con su nombre y su saldo y el del casino
dameNombreSaldo(j:Jugador):TupleType(nombre:String , ganancia: Numero))
pre:	true
post:	result Tuple{nombre:String = j.nombre, saldo:Numero = j.saldo}


--------------------------------------------------------------------------
estadoActual(): Collection(TupleType(nombre:String , saldo: Numero))
pre:	true
post:	
	let jugadores:Collection(Jugador) = Jugador.allInstances() 
	let casino:Jornada = Jornada.allInstances()->asSecuence->first()

	result jugadores->iterate(j;res=orderedset();res->including(dameNombreGanancia(j))
		->including(Tuple{nombre:String = "Jornada Actual", saldo:Numero = casino.saldo})
--------------------------------------------------------------------------


--////////////////////////////////////////////////////////////////
--////////////////////////////////////////////////////////////////

detalleMoviminetosPorJugador(): Collection(TupleType(nombre:String , saldo: Numero))